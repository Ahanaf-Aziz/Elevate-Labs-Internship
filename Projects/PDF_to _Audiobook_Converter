# PDF to Audiobook Converter

A Python desktop application that converts PDF documents into spoken audio files. Perfect for creating audiobooks, studying materials, or accessibility purposes.

## Features

- **PDF Text Extraction**: Automatically extracts and cleans text from PDF files
- **Multiple TTS Engines**: Choose between pyttsx3 (offline) and gTTS (online)
- **Audio Controls**: Adjust speech speed (50-300 WPM) and volume (0-100%)
- **Audio Playback**: Play, pause, resume, and stop audio playback
- **MP3 Export**: Save converted audio as MP3 files
- **User-Friendly GUI**: Intuitive Tkinter interface with step-by-step workflow
- **Text Preview**: Preview extracted text before conversion

## Installation

### Prerequisites
- Python 3.8 or higher
- pip (Python package manager)

### Setup

1. Clone or download this project
2. Install required dependencies:

\`\`\`bash
pip install -r requirements.txt
\`\`\`

For audio conversion to MP3, you may also need ffmpeg:
- **Windows**: `choco install ffmpeg` or download from https://ffmpeg.org/download.html
- **macOS**: `brew install ffmpeg`
- **Linux**: `sudo apt-get install ffmpeg`

## Usage

### Running the Application

\`\`\`bash
python gui_app.py
\`\`\`

### Step-by-Step Guide

1. **Select PDF File**: Click "Browse PDF" to choose your PDF document
2. **Preview Text**: Review the extracted text in the preview window
3. **Configure Settings**: 
   - Adjust speech speed (50-300 WPM)
   - Set volume level (0-100%)
   - Choose TTS engine (pyttsx3 or gTTS)
4. **Convert to Audio**: Click "Convert to Audio" and select output location
5. **Playback**: Use playback controls to play, pause, or stop the audio
6. **Export**: Save the audio file as MP3

## Creating Sample PDFs

To create sample PDF files for testing:

\`\`\`bash
python scripts/create_sample_pdf.py
\`\`\`

This will generate two sample PDFs:
- `sample_technology.pdf`
- `sample_python.pdf`

## Project Structure

\`\`\`
pdf-audiobook-converter/
├── gui_app.py              # Main GUI application
├── pdf_extractor.py        # PDF text extraction module
├── tts_engine.py           # Text-to-speech conversion engine
├── audio_player.py         # Audio playback controls
├── requirements.txt        # Python dependencies
├── README.md              # This file
└── scripts/
    └── create_sample_pdf.py # Sample PDF generator
\`\`\`

## Modules

### PDFExtractor
Handles PDF loading and text extraction with cleaning capabilities.

**Key Methods:**
- `load_pdf()`: Load PDF document
- `extract_text()`: Extract all text from PDF
- `clean_text()`: Clean and normalize text
- `extract_by_pages()`: Extract text page by page

### TTSEngine
Converts text to speech using pyttsx3 or gTTS.

**Key Methods:**
- `set_speed(speed)`: Set speech speed in WPM
- `set_volume(volume)`: Set volume level (0.0-1.0)
- `convert_to_speech(text, output_file)`: Convert text to audio

### AudioPlayer
Manages audio playback with controls.

**Key Methods:**
- `play(audio_file)`: Play audio file
- `pause()`: Pause playback
- `resume()`: Resume playback
- `stop()`: Stop playback
- `set_volume(volume)`: Set playback volume

## Configuration

### TTS Engine Selection

**pyttsx3 (Offline)**
- Pros: Works offline, no internet required, faster
- Cons: Limited voice options, lower quality

**gTTS (Online)**
- Pros: Better voice quality, more natural sounding
- Cons: Requires internet connection, slower

## Troubleshooting

### Audio not playing
- Ensure pygame mixer is properly initialized
- Check system audio settings
- Verify audio file format is supported

### Conversion fails
- Check PDF file is not corrupted
- Ensure sufficient disk space for output file
- Try switching TTS engine

### Text extraction issues
- Some PDFs may have special formatting that's difficult to extract
- Try cleaning the PDF first with a PDF editor
- Check if PDF is password protected

## Performance Tips

- For large PDFs, consider splitting them into smaller files
- Use pyttsx3 for faster conversion (offline)
- Reduce speech speed for better audio quality
- Close other applications to free up system resources

## License

This project is open source and available for educational and personal use.

## Contributing

Feel free to fork, modify, and improve this project. Contributions are welcome!

## Support

For issues or questions, please check the troubleshooting section or create an issue in the project repository.
